<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>语言的背后是鲜活的人</title>
      <link href="/I-read-myself/"/>
      <url>/I-read-myself/</url>
      
        <content type="html"><![CDATA[<p>高二上期期中考试结束了，写了一篇「假作文」的我并不能说满意。</p><p>拿到作文题目的时候，我的第一想法仍然是死板地根据思维定势开始想套话、编造套话，尽可能的用「漂亮话」和矫揉造作的修辞拼凑一篇政治宣传文章。我把作文当成了获得分数的工具，只让我笔下的文字为拿到一个基本分不落伍而书写。</p><p>**语言就是一个人的真实展现。**语言文字之后就是你，你书写的东西展示的即是你的思维。**若你把语言当工具，你就是工具。**功利性的假文章背后你就是一个功利的工具人，为了拿高分而投机。</p><a id="more"></a><p>会写出这样的文字，只能写出这样的文字，背后的本质原因是你从来都只是逃避生活，虚伪自己，懒惰思考，敷衍应付。</p><ol><li>缺乏对自己清晰而真实的定位和认识。</li><li>不敢面对真实的自己。</li><li>不愿在芸芸众生中踏实努力。</li><li>总是追逐功利的成就而忽视朴素的本源自我。</li></ol><p>成长是在面对真实的自我后，平静地接受平凡的自己，回到众生中去，放下对自己特殊性的描述和定位，承认平凡甚至平庸，踏实地面对自己，做好过程中的每一件小事，不放弃每一个提升自己的机会，在生活中感悟、发现，然后发展个性的自己，成熟的、理性的自己。</p><p>具体到语文学科上，做好每周的阅读和摘录，积累和复习需掌握的必备知识，感悟生活，在作文中展示真实的体会。</p><p>最后，任何一次考试都是过程性的。「活到老，学到老。」人生就是一个不断认识自己、提升自己、改变自己、发展自己的过程，在这个过程中不失本心，永远记得面对真实的自己，不对自己说谎，诚信待己待人，不功利，不为一己之私而而违背内心和道德，而思维层面随着认识和知识的不断开阔和加深而提升，「智商」「情商」提高，不断审视自己、纠正自己。最终的答卷当是「盖棺论定时」，对自己对一生无怨无憾，才是中国人生哲学的终极目标。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界正在趋于无趣与平庸之中吗</title>
      <link href="/I-saving-myself/"/>
      <url>/I-saving-myself/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我们的世界逐渐在被一部握持在手中的小型计算机掌控着，我们的沟通、娱乐、消费、生活都在这块小小的屏幕里活动着，并且由旁人推动着越来越多的人进入这个趋于统一的世界，个性正在一点一点的消磨而逝。</p></blockquote><p>思考是从与同学交流购入中古游戏掌机开始的。</p><p>周末的时候看了一个B站UP主的视频，那位UP主谈了为什么在2020年我们仍然需要像NDS这样「纯粹」的游戏机。</p><p>其中他提到一个观点：</p><p><em>一台只能玩游戏的游戏机，买来不仅没有让他沉迷于虚拟世界，而是学会了更多地开始专注于工作和学习之中。</em></p><a id="more"></a><p>我极度认同。一台为了解决「所有需求」的手机，能为我们提供什么游戏？鹅厂的MOBA，还是鹅厂的吃鸡？手机游戏厂商们一味地开发大量即时快餐的游戏，互联网的短平快成为手游的特征与标志。难道原神精致的画面、引人入胜的剧情和激烈的战斗没有打动我吗？答案是否定的。但我在试玩一下以后便失去了游玩的动力，毕竟我没有不氪就出SSR的欧皇运气，也没有它所需要的大量的时间与精力去专注于升级和完成每周任务。我想要的，只是简简单单的线性叙事游戏，一个打动人心、扣人心弦的好故事，一套上手不难但能从中获得挑战乐趣的战斗系统，一次身临其境的剧场体验。我想要的，仅仅是我与游戏的互动，是危急时刻艾达王救下里昂的屏息凝神，是美末里结尾的说出"I swear"的潸然泪下，是JD看着同伴丧母时的伤痛欲绝。在一个沉浸的游戏世界中，只有我——阅读者的存在，和一个等待我开启的未知而充满魅力的世界。</p><p>而这些，都是在即使移动CPU性能逐渐赶上桌面平台的今天，手机所仍然缺乏的。它始终是一个综合性移动<strong>通讯</strong>工具的存在，我真正想要拥有的，它给不了我。这时，掌机游戏机是解决需求的最佳答案。它便携，舒适，长续航，最重要的是它的纯粹。它让你专注于你真正想要的内容上而不是形式，它不会带给你任何的干扰，杜绝三心二意。你可以第一次在短短的半小时时间里不再对着玻璃板块滑来滑去，而是真正的投身到宏大而壮丽的的世界里，去探索，去勇闯，去冒险，做真正想要做的事。这才是它能带给我们最大的意义和价值。</p><p>而在人的一生中，我们所需要的，不只是游戏领域的纯粹，而是各方面的，多元而专一的纯粹。例如看电影，看番剧。有多少次部电影是为了和同龄人拥有共同话题而刷的，有多少集番剧实际并不触动我，而敷衍着拉动进度条追完的。这样的娱乐真的是在为了自己的满足吗？我是排斥自己的这种做法的。生活中的任一事情的存在，都是为了解决自己的需求，满足自己的娱乐需要，为了自己的发展而考虑，为了自己的想法而思考的。朋友间的交流是同好的互识而非徒劳的追逐。先丰富自己的精神世界，才不会在语言与思维上匮乏无力。从这个意义上，我需要走的路还很长。</p><p>知道自己想要的，希望做到的事，我缺乏的是持续不断的热情和持之以恒的毅力。这17年来，我有多少异想天开的想法，就有多少半途而废的项目，有多少完美无缺的计划，就有多少无疾而终的遗忘。想要学习的东西，那一个不是等到真正要派上用途的时候只能苦笑着放弃眼前的机会，再深深的懊悔。17年来，我的学习之外的人生可以说一事无成。没有一项体育特长，不会一门音乐乐器，从未读完一本长篇，平庸而平凡的生活一天一天。</p><p>我总是把时间浪费在简单的拿手的Time Killer上，不思进取，好逸恶劳。或许真正这17年来，我从未掌握过什么叫真正的「掌握」。我所会的，永远只是简单的招式重复，琐碎的套路复现，不能被任何人重视和钦佩，我只敢蜷缩在角落里，害怕着外面的阳光，独自幽冷畏颓着。</p><p>而我想要改变这一次。或许今天所看到的这个观点能够解答部分问题：</p><blockquote><p>习惯性的拖延者总是想要在DL前将事情做到最完美，但却不知如何完美的开始，到最后都不曾动工，最终一事无成。</p></blockquote><p>而这位作者提出了一个解决的方法：</p><blockquote><p>不要犹豫，拿出<strong>阶段性的成果</strong>，可见可感的成果及时反馈给自己，先拿出及格线水平以上的项目，再修饰润色，最后才能精进于完美。</p></blockquote><p>我希望从我成年以前，人生的第十八年，让自己看到自己不平凡的一面，心有底气的大声呐喊出「我也能做到别人做不到的事」，让自己拥有一项特长。这是我用来与这个正在趋于无聊与平庸的世界，沉重而刻苦铭心的一招。</p><p>2020年11月9日 凌晨</p><p>杨奇 于宿舍</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>朝阳东升</title>
      <link href="/the-bad-boys/"/>
      <url>/the-bad-boys/</url>
      
        <content type="html"><![CDATA[<blockquote><p>蓝蓝的天空银河里</p><p>有只小白船</p><p>船上有棵桂花树</p><p>白兔在游玩</p><p>飘啊飘啊飘到云天外</p></blockquote><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=5246942&amp;auto=0&amp;height=66"></iframe><p>最近看了《隐秘的角落》，心情久久不能平复。比如，当我躺在沙发上闭上眼睛时，脑海中一直回荡着这首奇妙的童谣。</p><p>回味其中的故事，有许多触发了我的思想。</p><h2 id="笛卡尔坐标系"><a class="markdownIt-Anchor" href="#笛卡尔坐标系"></a> 笛卡尔坐标系</h2><p>朱朝阳和张老师都是笛卡尔的信仰者。童话中的笛卡尔与公主被国王无情地分隔开，一位终身等候，一位怀恨而终。这个故事我在刚好一年前参加暑假培训时候听到隔壁参加数学培训的同学说起过，当时只作一个美丽而又俗套的野史匆匆听过，不有过多在意。「你可以选择相信童话」我们大多数人都喜欢美好的童话故事，希望我们关注的主人公能有大团圆结局，期待有付出就一定有收获，等待着忠诚的爱情会换回美好的结果。</p><p>而剧中却说，另一个版本的传说中，公主并不在意笛卡尔的心形线，笛卡尔并没有死于狱中，而是死于背叛，这个结局更像是被刻意隐藏的现实，但又更加真实。在人际社会中，并非真心的付出一定有等值的回报，现实情况是大多鼓起勇气递出的情书最终石沉大海，忠心等待会无疾而终。这个版本的故事像我们自己，我们每个人都有一个或者多个经历能够对号入座到这个故事里，在跨越数百年的数学历史中获得古人的慰藉。</p><p>我向往童话般美好的故事，我本不能接受后者这样的现实。但看完《隐秘的角落》之后的我渐渐地能够开始理解这个现实故事，也明白了这个故事于我人生中出现的意义。如果一个从未接触过现实的人突然发现了生活的残酷本质，其心理和精神当会遭受巨大的折磨与痛苦，一边回味着过往的种种虚幻的幸福时光，一边哭喊着呐喊着排斥当下的现实。此时若没能正确地调节自我，恐怕最终会落入无尽黑暗的深渊之中。</p><p>从少年向青年的成长，即是接受了更多现实中以往被隐秘起来的阴暗角落。</p><h2 id="我还有机会吗"><a class="markdownIt-Anchor" href="#我还有机会吗"></a> 我还有机会吗</h2><p>张东升每到绝望的最后关头总会问出这个问题。</p><p>而他人性中被隐秘起来的阴暗角落即随之打开。</p><p>他错，或许是错在太过于专情，错在投入了太多的感情，在一棵树上吊死，不给对方和自己重新开始的机会，没有给到恋人放弃的权利。这样的爱太自私了。一旦拥有就要一直拥有，无论是对方自愿或者非自愿地脱离自己的控制都要获得惩罚，控制欲太强烈了。</p><p>纵然，我可以对张东升有同情和理解，对方的背叛当然算是违背了诺言的极大罪恶，但并非不可原谅的罪恶。人心总变，至死不渝的情感终是人类社会可遇不可求的奢侈品。人都会有背叛，会有犯下罪恶的时候，每个人都是如此。所以我们需要救赎，需要原谅，需要我们给予彼此的再来一次或是重新开始的机会。一次的罪恶不能拿作人生中永久的污渍。</p><p>从这个意义上，我还有没有机会，并不重要，也不需要回答。张东升和张东升们所真正需要的并不是让对方和自己再来一次的机会，而是给双方的人生重新开始的勇气。放下过去，放下无所回报的无谓的付出，勇敢地原谅。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=490092&amp;auto=0&amp;height=66"></iframe><p>又通了宵，远处的朝阳渐渐东升，但我认为把我从这部剧中获得的认识保存下来，这是值得的。人生啊，远比我想象中的复杂多了！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 隐秘的角落 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青春期综合症</title>
      <link href="/youth-in-school/"/>
      <url>/youth-in-school/</url>
      
        <content type="html"><![CDATA[<h2 id="空气"><a class="markdownIt-Anchor" href="#空气"></a> 空气</h2><p>我也讨厌「氛围」。</p><p>我不因为大家都会做而做一件事情。学校真是一个奇怪的地方，在单调而又无聊的学习生活里面，大家期待而渴望挖掘身边不平凡的事情。所谓班级的大多数，尽是渴望能出现一个出众而显眼的人，大家把目光、关注、舆论聚焦到这个人身上，便又是「相安无事」的一天。</p><p>这样的「空气」一旦形成，不是一个人，两个人或是一个寝室的人能够改变的。它膨胀着欲想要吞噬着更多的人，谁反抗谁就会被反噬。持有着正义的人在空气中的大众面前不过是耍着帽子的滑稽小丑，所以没有人愿意与之对抗，不过是徒增能耗罢了。愿意站在客观的角度思考已经是一件极为不容易的事了，何况向大众展示自己不成熟的想法呢？热闹都是他们的，我什么也没有。</p><a id="more"></a><p>所幸我所生活的世界并不被这小小的空气所笼罩着，或者说，我的世界是被几种几十种不同的空气所笼罩。别人的热情与善良给予了我更多的选择，提供了大大小小的庇护所。若我在孤独时我总会有处可去而不至于风餐露宿或是为人所弃。</p><p>我也为我身边有许许多多敢于与世对争，敢于「多管闲事」，敢于与所见的不公相斗争的朋友。他们是值得我珍惜的。他们即是一群无论你与这个世界背离多远也愿意接纳你的人，这样的人不多。</p><h2 id="坦诚"><a class="markdownIt-Anchor" href="#坦诚"></a> 坦诚</h2><h3 id="我们应如何面对自己的内心"><a class="markdownIt-Anchor" href="#我们应如何面对自己的内心"></a> 我们应如何面对自己的内心。</h3><p>我还记得那个反孔融让梨的故事，理由是孔融违背了自己的内心。若是一个人内心想要什么，便应当直面欲望，大胆的告诉别人和自己：我想要！并且为之竞争和奋斗。在假惺惺地谦让给别人的时候，内心真实的想法却是希望别人谦让给自己，可笑。我们都想要得到更好的，除非真的对其不感兴趣；或者自己想要，却服气地承认对手的努力与强大，而真正的谦让。</p><h3 id="青春期懵懂的喜欢的感情大概也与坦诚这个词有些联系"><a class="markdownIt-Anchor" href="#青春期懵懂的喜欢的感情大概也与坦诚这个词有些联系"></a> 青春期懵懂的「喜欢」的感情大概也与坦诚这个词有些联系</h3><p>在我的世界里，喜欢就应当表白，被拒绝就坦然的接受，这样就好了。若缠缠绵绵不了断，只会伤害双方，徒增能耗罢了。</p><p>思念而又不得。「衣带渐宽终不悔，为伊消得人憔悴。」暗恋之苦，如嚼泪眠。希望你能够尽早向所爱之人表达内心，就能减少几分痛苦了吧。</p><h2 id="永远"><a class="markdownIt-Anchor" href="#永远"></a> 永远</h2><p>世界上不会存在永远，我能做到的也只有尽可能的不要许下太过长远的承诺。世界上的一切都会变化，我们要坦然接受。任何形式的拐弯抹角都是对现状的保留，那还不如把过去忘了重新开始旅行。</p><p><em>To Be Continued</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 青春猪头少年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想见你</title>
      <link href="/someday-or-one-day/"/>
      <url>/someday-or-one-day/</url>
      
        <content type="html"><![CDATA[<p>正是黄雨萱对王诠胜深深的不舍，才会让李子维爱上那个独立的陈韵如。</p><p>我发现到最后我忍住不看最后两集，不是因为黄雨萱思念李子维，而是我舍不得他们。</p><a id="more"></a><iframe allow="autoplay *; encrypted-media *;" frameborder="0" height="150" style="width:100%;max-width:660px;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/last-dance/156141637?i=156141673"></iframe><p>我本以为黄雨萱像我一样，最后只能做观众，在知道所有的命运之后而束手无策，什么也无可改变。只能任凭美好的东西在眼前慢慢消逝，即使从一开始就知道会有这样的结局。这种无奈，和曾经的美好，太残酷了。</p><p>我最喜欢的是2003年的李子维到2010年成为了王诠胜作为学弟追求黄雨萱的故事。那种发觉了自己所爱而为之努力的情节无论出现多少次，我都不会感到厌倦，而是一次又一次地被打动。为了一个笑容而付出一生，可是最浪漫的事啊。</p><p><img src="../medias/wang-quan-sheng.png" alt="王诠胜"></p><p>我希望我能永远记得，李子维在准备联考的时候，挑灯夜战的那个模样。即使已经疲倦到眼皮沉重，即使眼前的笔已经摇摇晃晃，可只要想到黄雨萱，就又获得了动力。</p><p>我希望他们的结局是美好的，我希望天下有情人终成眷属，我希望自己也能一天能拥有脱离尘俗的真爱。</p><p>值得托付一生，这个命题又被提起了。我觉得，每个人都曾经有过这样青春的期待吧。我们并不是对这个世界充满了绝望，而正是拥有了无数的期望。</p><p>每次当我翻开电脑屏幕的时候，我是真的沉入这个故事里面了，无法自拔。</p><p>谢谢《想见你》。</p><p>若我要许下第三个愿望，必定是___。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 想见你 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="/focus-on-life/"/>
      <url>/focus-on-life/</url>
      
        <content type="html"><![CDATA[<p>以前读到关于非典的文章，看到有关那段特殊时期日子的电影，都会用我那尚不成熟的想象力遐思这不平凡的岁月。2020年初，便切身体会到了。</p><p>然而，我只是想写则随笔，可能更像是那种随心的便条贴，想到什么说什么罢了。</p><a id="more"></a><p>古人云「鱼和熊掌不可得兼」。我想，那些想要同时兼顾两件事或者多件事的人，大都不会成功；不如说，每当我想要这样做的时候都会失败。我是由新闻软件想到的。我讨厌那些「千人千面」的算法，一旦我熟悉了那种「唯我正确」的观念，我便不再会拥有更广阔的胸襟，更开阔的思想，去容纳这个瞬息万变的世界。若我的口味在算法的指引下趋于单一，我便失去了生活，失去了新鲜的体验感。</p><p>我还想到新闻下面的盖楼讨论大部分是没有实际意义。应该说，讨论远离自身的又真实存在的世界上发生着的事情，不会有结果。比如今天读到IT之家上有人争论 ①Microsoft Office和WPS Office二者谁的合并套件先出 以及 ②格式互通协议对哪方更有利。然而，除了真正与这两家公司有直接关系的人和相关专业研究者，一般群众的讨论不过是「谁看到的自媒体文章看起来更吸引人」罢了。</p><p>学校的生活和教育是否也是与「专注」有紧密的关联呢？我回想自初中以来的学习生活，其实与小学时候并无两样。每天的学习任务和安排需要扎实的完成和及时的巩固即可，并不存在任何理解上的大问题。从上面的角度看，在进行基础学识教育的同时，还考验了学生的专注能力；而从我（我无法代表「我们」这么大的词）的角度看，不过是看谁更能耐住性子刻苦钻研罢了。</p><p>说是「不过」，实际上对我个人而言，是一件不轻松的事。我只有在相应的环境里，才会专注于一件事。「吃着碗里的想着锅里的」拿来形容我是我认可的，毕竟回顾自身经历，似乎连一部游戏都从未打通关过。追番剧大都不了了之，许多想要学习的技能也半途而废。在自己身上至今还找不出特别的闪光点，说来还是意志不够坚定，生性懒惰。</p><p>推拖。</p><p>改变的当下措施即是早睡，改正作息规律才是。不能丢弃对生活的信心。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高中 </tag>
            
            <tag> 非典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我理解的递归与汉诺塔在C++中的实现</title>
      <link href="/ecursive-hanoi/"/>
      <url>/ecursive-hanoi/</url>
      
        <content type="html"><![CDATA[<h2 id="递归算法"><a class="markdownIt-Anchor" href="#递归算法"></a> 递归算法</h2><p>从目前遇到的简单的递归算法来看，可以递归与分段函数等价，例如：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>e</mi><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f ( x )=\begin{cases}f ( \ln x ),\quad x &gt; 1 \\\\e ^ { x - 1 },\quad x \leq 1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>在C++中的实现可以为：</p><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> x&gt;<span class="number">1</span> ? f(<span class="built_in">log</span>(x)) : <span class="built_in">exp</span>(x<span class="number">-1</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><p>又如斐波拉契数列在C++中可以用这样的方式实现：</p><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> x&gt;<span class="number">2</span> ? f(x<span class="number">-1</span>)+f(x<span class="number">-2</span>) : x<span class="number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>而用分段函数可以表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>&gt;</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f ( x )=\begin{cases}0 ,\quad x = 1 \\\\1 ,\quad x = 2 \\\\f ( x - 1 ) + f ( x - 2 ) ,\quad x &gt; 2\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>那么，也就是说，对于递归函数的题，只要能写出他的分段函数表达式，就能实现这个函数。</p><h2 id="汉诺塔"><a class="markdownIt-Anchor" href="#汉诺塔"></a> 汉诺塔</h2><p><img src="../medias/image-20200130202924579.png" alt="手绘汉诺塔"></p><blockquote><p>约19世纪末，在欧州的商店中出售一种智力玩具，在一块铜板上有三根杆，最左边的杆上自上而下、由小到大顺序串着由64个圆盘构成的塔。目的是将最左边杆上的盘全部移到中间的杆上，条件是一次只能移动一个盘，且不允许大盘放在小盘的上面。</p><p>这是一个著名的问题，几乎所有的教材上都有这个问题。由于条件是一次只能移动一个盘，且不允许大盘放在小盘上面，所以64个盘的移动次数是：18,446,744,073,709,551,615</p><p>这是一个天文数字，若每一微秒可能计算(并不输出)一次移动，那么也需要几乎一百万年。我们仅能找出问题的解决方法并解决较小N值时的汉诺塔，但很难用计算机解决64层的汉诺塔。</p><p>假定圆盘从小到大编号为1, 2, …</p></blockquote><h3 id="分段函数"><a class="markdownIt-Anchor" href="#分段函数"></a> 分段函数</h3><p><img src="../medias/image-20200130203034316.png" alt="汉诺塔的分段函数"></p><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">han</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> chu,<span class="keyword">char</span> guo,<span class="keyword">char</span> mo)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;chu&lt;&lt;<span class="string">"-&gt;1-&gt;”&lt;&lt;mo&lt;&lt;endl;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">han(n-1,chu,mo,guo);</span></span><br><span class="line"><span class="string">cout&lt;&lt;chu&lt;&lt;"</span>-&gt;<span class="string">"&lt;&lt;n&lt;&lt;"</span>-&gt;<span class="string">"&lt;&lt;mo&lt;&lt;endl;</span></span><br><span class="line"><span class="string">han(n-1,guo,chu,mo);</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">int main()</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">int n;</span></span><br><span class="line"><span class="string">char a,b,c;</span></span><br><span class="line"><span class="string">cin&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span></span><br><span class="line"><span class="string">han(n,a,b,c);</span></span><br><span class="line"><span class="string">return 0;</span></span><br><span class="line"><span class="string">}</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> NOIP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    
  
  
</search>
