<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>古典部</title>
  
  <subtitle>梦开始的地方</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://strangeyang.github.io/"/>
  <updated>2020-05-01T12:04:00.929Z</updated>
  <id>http://strangeyang.github.io/</id>
  
  <author>
    <name>Strange Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>青春期综合症</title>
    <link href="http://strangeyang.github.io/youth-in-school/"/>
    <id>http://strangeyang.github.io/youth-in-school/</id>
    <published>2020-05-01T11:07:32.000Z</published>
    <updated>2020-05-01T12:04:00.929Z</updated>
    
    <content type="html"><![CDATA[<h2 id="空气"><a class="markdownIt-Anchor" href="#空气"></a> 空气</h2><p>我也讨厌「氛围」。</p><p>我不因为大家都会做而做一件事情。学校真是一个奇怪的地方，在单调而又无聊的学习生活里面，大家期待而渴望挖掘身边不平凡的事情。所谓班级的大多数，尽是渴望能出现一个出众而显眼的人，大家把目光、关注、舆论聚焦到这个人身上，便又是「相安无事」的一天。</p><p>这样的「空气」一旦形成，不是一个人，两个人或是一个寝室的人能够改变的。它膨胀着欲想要吞噬着更多的人，谁反抗谁就会被反噬。持有着正义的人在空气中的大众面前不过是耍着帽子的滑稽小丑，所以没有人愿意与之对抗，不过是徒增能耗罢了。愿意站在客观的角度思考已经是一件极为不容易的事了，何况向大众展示自己不成熟的想法呢？热闹都是他们的，我什么也没有。</p><a id="more"></a><p>所幸我所生活的世界并不被这小小的空气所笼罩着，或者说，我的世界是被几种几十种不同的空气所笼罩。别人的热情与善良给予了我更多的选择，提供了大大小小的庇护所。若我在孤独时我总会有处可去而不至于风餐露宿或是为人所弃。</p><p>我也为我身边有许许多多敢于与世对争，敢于「多管闲事」，敢于与所见的不公相斗争的朋友。他们是值得我珍惜的。他们即是一群无论你与这个世界背离多远也愿意接纳你的人，这样的人不多。</p><h2 id="坦诚"><a class="markdownIt-Anchor" href="#坦诚"></a> 坦诚</h2><h3 id="我们应如何面对自己的内心"><a class="markdownIt-Anchor" href="#我们应如何面对自己的内心"></a> 我们应如何面对自己的内心。</h3><p>我还记得那个反孔融让梨的故事，理由是孔融违背了自己的内心。若是一个人内心想要什么，便应当直面欲望，大胆的告诉别人和自己：我想要！并且为之竞争和奋斗。在假惺惺地谦让给别人的时候，内心真实的想法却是希望别人谦让给自己，可笑。我们都想要得到更好的，除非真的对其不感兴趣；或者自己想要，却服气地承认对手的努力与强大，而真正的谦让。</p><h3 id="青春期懵懂的喜欢的感情大概也与坦诚这个词有些联系"><a class="markdownIt-Anchor" href="#青春期懵懂的喜欢的感情大概也与坦诚这个词有些联系"></a> 青春期懵懂的「喜欢」的感情大概也与坦诚这个词有些联系</h3><p>在我的世界里，喜欢就应当表白，被拒绝就坦然的接受，这样就好了。若缠缠绵绵不了断，只会伤害双方，徒增能耗罢了。</p><p>思念而又不得。「衣带渐宽终不悔，为伊消得人憔悴。」暗恋之苦，如嚼泪眠。希望你能够尽早向所爱之人表达内心，就能减少几分痛苦了吧。</p><h2 id="永远"><a class="markdownIt-Anchor" href="#永远"></a> 永远</h2><p>世界上不会存在永远，我能做到的也只有尽可能的不要许下太过长远的承诺。世界上的一切都会变化，我们要坦然接受。任何形式的拐弯抹角都是对现状的保留，那还不如把过去忘了重新开始旅行。</p><p><em>To Be Continued</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;空气&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#空气&quot;&gt;&lt;/a&gt; 空气&lt;/h2&gt;
&lt;p&gt;我也讨厌「氛围」。&lt;/p&gt;
&lt;p&gt;我不因为大家都会做而做一件事情。学校真是一个奇怪的地方，在单调而又无聊的学习生活里面，大家期待而渴望挖掘身边不平凡的事情。所谓班级的大多数，尽是渴望能出现一个出众而显眼的人，大家把目光、关注、舆论聚焦到这个人身上，便又是「相安无事」的一天。&lt;/p&gt;
&lt;p&gt;这样的「空气」一旦形成，不是一个人，两个人或是一个寝室的人能够改变的。它膨胀着欲想要吞噬着更多的人，谁反抗谁就会被反噬。持有着正义的人在空气中的大众面前不过是耍着帽子的滑稽小丑，所以没有人愿意与之对抗，不过是徒增能耗罢了。愿意站在客观的角度思考已经是一件极为不容易的事了，何况向大众展示自己不成熟的想法呢？热闹都是他们的，我什么也没有。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://strangeyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="高中" scheme="http://strangeyang.github.io/tags/%E9%AB%98%E4%B8%AD/"/>
    
      <category term="青春猪头少年" scheme="http://strangeyang.github.io/tags/%E9%9D%92%E6%98%A5%E7%8C%AA%E5%A4%B4%E5%B0%91%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>想见你</title>
    <link href="http://strangeyang.github.io/someday-or-one-day/"/>
    <id>http://strangeyang.github.io/someday-or-one-day/</id>
    <published>2020-03-04T23:55:02.000Z</published>
    <updated>2020-03-08T07:41:15.929Z</updated>
    
    <content type="html"><![CDATA[<p>正是黄雨萱对王诠胜深深的不舍，才会让李子维爱上那个独立的陈韵如。</p><p>我发现到最后我忍住不看最后两集，不是因为黄雨萱思念李子维，而是我舍不得他们。</p><a id="more"></a><iframe allow="autoplay *; encrypted-media *;" frameborder="0" height="150" style="width:100%;max-width:660px;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/last-dance/156141637?i=156141673"></iframe><p>我本以为黄雨萱像我一样，最后只能做观众，在知道所有的命运之后而束手无策，什么也无可改变。只能任凭美好的东西在眼前慢慢消逝，即使从一开始就知道会有这样的结局。这种无奈，和曾经的美好，太残酷了。</p><p>我最喜欢的是2003年的李子维到2010年成为了王诠胜作为学弟追求黄雨萱的故事。那种发觉了自己所爱而为之努力的情节无论出现多少次，我都不会感到厌倦，而是一次又一次地被打动。为了一个笑容而付出一生，可是最浪漫的事啊。</p><p><img src="../medias/wang-quan-sheng.png" alt="王诠胜"></p><p>我希望我能永远记得，李子维在准备联考的时候，挑灯夜战的那个模样。即使已经疲倦到眼皮沉重，即使眼前的笔已经摇摇晃晃，可只要想到黄雨萱，就又获得了动力。</p><p>我希望他们的结局是美好的，我希望天下有情人终成眷属，我希望自己也能一天能拥有脱离尘俗的真爱。</p><p>值得托付一生，这个命题又被提起了。我觉得，每个人都曾经有过这样青春的期待吧。我们并不是对这个世界充满了绝望，而正是拥有了无数的期望。</p><p>每次当我翻开电脑屏幕的时候，我是真的沉入这个故事里面了，无法自拔。</p><p>谢谢《想见你》。</p><p>若我要许下第三个愿望，必定是___。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正是黄雨萱对王诠胜深深的不舍，才会让李子维爱上那个独立的陈韵如。&lt;/p&gt;
&lt;p&gt;我发现到最后我忍住不看最后两集，不是因为黄雨萱思念李子维，而是我舍不得他们。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://strangeyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="高中" scheme="http://strangeyang.github.io/tags/%E9%AB%98%E4%B8%AD/"/>
    
      <category term="想见你" scheme="http://strangeyang.github.io/tags/%E6%83%B3%E8%A7%81%E4%BD%A0/"/>
    
  </entry>
  
  <entry>
    <title>无题</title>
    <link href="http://strangeyang.github.io/focus-on-life/"/>
    <id>http://strangeyang.github.io/focus-on-life/</id>
    <published>2020-02-26T17:14:23.000Z</published>
    <updated>2020-03-06T09:51:02.047Z</updated>
    
    <content type="html"><![CDATA[<p>以前读到关于非典的文章，看到有关那段特殊时期日子的电影，都会用我那尚不成熟的想象力遐思这不平凡的岁月。2020年初，便切身体会到了。</p><p>然而，我只是想写则随笔，可能更像是那种随心的便条贴，想到什么说什么罢了。</p><a id="more"></a><p>古人云「鱼和熊掌不可得兼」。我想，那些想要同时兼顾两件事或者多件事的人，大都不会成功；不如说，每当我想要这样做的时候都会失败。我是由新闻软件想到的。我讨厌那些「千人千面」的算法，一旦我熟悉了那种「唯我正确」的观念，我便不再会拥有更广阔的胸襟，更开阔的思想，去容纳这个瞬息万变的世界。若我的口味在算法的指引下趋于单一，我便失去了生活，失去了新鲜的体验感。</p><p>我还想到新闻下面的盖楼讨论大部分是没有实际意义。应该说，讨论远离自身的又真实存在的世界上发生着的事情，不会有结果。比如今天读到IT之家上有人争论 ①Microsoft Office和WPS Office二者谁的合并套件先出 以及 ②格式互通协议对哪方更有利。然而，除了真正与这两家公司有直接关系的人和相关专业研究者，一般群众的讨论不过是「谁看到的自媒体文章看起来更吸引人」罢了。</p><p>学校的生活和教育是否也是与「专注」有紧密的关联呢？我回想自初中以来的学习生活，其实与小学时候并无两样。每天的学习任务和安排需要扎实的完成和及时的巩固即可，并不存在任何理解上的大问题。从上面的角度看，在进行基础学识教育的同时，还考验了学生的专注能力；而从我（我无法代表「我们」这么大的词）的角度看，不过是看谁更能耐住性子刻苦钻研罢了。</p><p>说是「不过」，实际上对我个人而言，是一件不轻松的事。我只有在相应的环境里，才会专注于一件事。「吃着碗里的想着锅里的」拿来形容我是我认可的，毕竟回顾自身经历，似乎连一部游戏都从未打通关过。追番剧大都不了了之，许多想要学习的技能也半途而废。在自己身上至今还找不出特别的闪光点，说来还是意志不够坚定，生性懒惰。</p><p>推拖。</p><p>改变的当下措施即是早睡，改正作息规律才是。不能丢弃对生活的信心。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前读到关于非典的文章，看到有关那段特殊时期日子的电影，都会用我那尚不成熟的想象力遐思这不平凡的岁月。2020年初，便切身体会到了。&lt;/p&gt;
&lt;p&gt;然而，我只是想写则随笔，可能更像是那种随心的便条贴，想到什么说什么罢了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://strangeyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="高中" scheme="http://strangeyang.github.io/tags/%E9%AB%98%E4%B8%AD/"/>
    
      <category term="非典" scheme="http://strangeyang.github.io/tags/%E9%9D%9E%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>我理解的递归与汉诺塔在C++中的实现</title>
    <link href="http://strangeyang.github.io/ecursive-hanoi/"/>
    <id>http://strangeyang.github.io/ecursive-hanoi/</id>
    <published>2020-01-30T11:15:00.000Z</published>
    <updated>2020-01-30T12:40:31.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="递归算法"><a class="markdownIt-Anchor" href="#递归算法"></a> 递归算法</h2><p>从目前遇到的简单的递归算法来看，可以递归与分段函数等价，例如：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>e</mi><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f ( x )=\begin{cases}f ( \ln x ),\quad x &gt; 1 \\\\e ^ { x - 1 },\quad x \leq 1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>在C++中的实现可以为：</p><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> x&gt;<span class="number">1</span> ? f(<span class="built_in">log</span>(x)) : <span class="built_in">exp</span>(x<span class="number">-1</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><p>又如斐波拉契数列在C++中可以用这样的方式实现：</p><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> x&gt;<span class="number">2</span> ? f(x<span class="number">-1</span>)+f(x<span class="number">-2</span>) : x<span class="number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>而用分段函数可以表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"></mspace><mi>x</mi><mo>&gt;</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f ( x )=\begin{cases}0 ,\quad x = 1 \\\\1 ,\quad x = 2 \\\\f ( x - 1 ) + f ( x - 2 ) ,\quad x &gt; 2\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>那么，也就是说，对于递归函数的题，只要能写出他的分段函数表达式，就能实现这个函数。</p><h2 id="汉诺塔"><a class="markdownIt-Anchor" href="#汉诺塔"></a> 汉诺塔</h2><p><img src="../medias/image-20200130202924579.png" alt="手绘汉诺塔"></p><blockquote><p>约19世纪末，在欧州的商店中出售一种智力玩具，在一块铜板上有三根杆，最左边的杆上自上而下、由小到大顺序串着由64个圆盘构成的塔。目的是将最左边杆上的盘全部移到中间的杆上，条件是一次只能移动一个盘，且不允许大盘放在小盘的上面。</p><p>这是一个著名的问题，几乎所有的教材上都有这个问题。由于条件是一次只能移动一个盘，且不允许大盘放在小盘上面，所以64个盘的移动次数是：18,446,744,073,709,551,615</p><p>这是一个天文数字，若每一微秒可能计算(并不输出)一次移动，那么也需要几乎一百万年。我们仅能找出问题的解决方法并解决较小N值时的汉诺塔，但很难用计算机解决64层的汉诺塔。</p><p>假定圆盘从小到大编号为1, 2, …</p></blockquote><h3 id="分段函数"><a class="markdownIt-Anchor" href="#分段函数"></a> 分段函数</h3><p><img src="../medias/image-20200130203034316.png" alt="汉诺塔的分段函数"></p><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">han</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> chu,<span class="keyword">char</span> guo,<span class="keyword">char</span> mo)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;chu&lt;&lt;<span class="string">"-&gt;1-&gt;”&lt;&lt;mo&lt;&lt;endl;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">han(n-1,chu,mo,guo);</span></span><br><span class="line"><span class="string">cout&lt;&lt;chu&lt;&lt;"</span>-&gt;<span class="string">"&lt;&lt;n&lt;&lt;"</span>-&gt;<span class="string">"&lt;&lt;mo&lt;&lt;endl;</span></span><br><span class="line"><span class="string">han(n-1,guo,chu,mo);</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">int main()</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">int n;</span></span><br><span class="line"><span class="string">char a,b,c;</span></span><br><span class="line"><span class="string">cin&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span></span><br><span class="line"><span class="string">han(n,a,b,c);</span></span><br><span class="line"><span class="string">return 0;</span></span><br><span class="line"><span class="string">}</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;递归算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#递归算法&quot;&gt;&lt;/a&gt; 递归算法&lt;/h2&gt;
&lt;p&gt;从目前遇到的简单的递归算法来看，可以递归与分段函数等价，例如：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow&gt;&lt;mo fence=&quot;true&quot;&gt;{&lt;/mo&gt;&lt;mtable rowspacing=&quot;0.3599999999999999em&quot; columnalign=&quot;left left&quot; columnspacing=&quot;1em&quot;&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;mrow&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;ln&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mspace width=&quot;1em&quot;&gt;&lt;/mspace&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mspace width=&quot;1em&quot;&gt;&lt;/mspace&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;/mrow&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;f ( x )=\begin{cases}
f ( \ln x ),\quad x &amp;gt; 1 \\\\
e ^ { x - 1 },\quad x \leq 1
\end{cases}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:4.32em;vertical-align:-1.9099999999999997em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;&lt;span class=&quot;mopen&quot;&gt;&lt;span class=&quot;delimsizing mult&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:2.35002em;&quot;&gt;&lt;span style=&quot;top:-2.19999em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;delimsizinginner delim-size4&quot;&gt;&lt;span&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.19999em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;delimsizinginner delim-size4&quot;&gt;&lt;span&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.1500100000000004em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;delimsizinginner delim-size4&quot;&gt;&lt;span&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.30001em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;delimsizinginner delim-size4&quot;&gt;&lt;span&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.60002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;delimsizinginner delim-size4&quot;&gt;&lt;span&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.8500199999999998em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-l&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:2.41em;&quot;&gt;&lt;span style=&quot;top:-4.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.008em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;ln&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:1em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.97em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.008em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-1.5300000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.008em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:1em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;≤&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.9099999999999997em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在C++中的实现可以为：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ? f(&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(x)) : &lt;span class=&quot;built_in&quot;&gt;exp&lt;/span&gt;(x&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="NOIP" scheme="http://strangeyang.github.io/categories/NOIP/"/>
    
    
      <category term="C++" scheme="http://strangeyang.github.io/tags/C/"/>
    
      <category term="递归" scheme="http://strangeyang.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>梦开始的地方</title>
    <link href="http://strangeyang.github.io/hello-world/"/>
    <id>http://strangeyang.github.io/hello-world/</id>
    <published>2020-01-30T06:17:51.000Z</published>
    <updated>2020-01-30T09:25:00.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里是梦开始的地方"><a class="markdownIt-Anchor" href="#这里是梦开始的地方"></a> 这里是梦开始的地方</h2><p>Hello, world!</p><p>冲向更远的彼方 PLUS ULTRA!</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;这里是梦开始的地方&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#这里是梦开始的地方&quot;&gt;&lt;/a&gt; 这里是梦开始的地方&lt;/h2&gt;
&lt;p&gt;Hello, world!&lt;/p&gt;
&lt;p&gt;冲向更远的彼方 PLUS ULTRA!&lt;/p&gt;
&lt;scrip
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
